name: ci

on:
  push:
    branches: [main, release/**]
  pull_request:
    branches: [main, release/**]
  workflow_dispatch:
  workflow_run:
    workflows: ["Update flake.lock"]
    types:
      - completed

permissions:
  contents: read
  pull-requests: write
  actions: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy --locked --all-features

      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        run: cargo +nightly fmt --verbose --all --check

      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@v18.0.0

      - name: Build
        run: cargo build --locked --verbose --benches --workspace

      - name: Run tests
        run: cargo test --locked --verbose --workspace

      - name: Run executable
        run: cargo run --locked

  test-nix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30

      - name: Cache Nix store
        uses: cachix/cachix-action@v15
        with:
          name: termframe
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run nix flake check
        run: nix flake check --print-build-logs --all-systems

      - name: Run nix build
        run: nix build --print-build-logs
