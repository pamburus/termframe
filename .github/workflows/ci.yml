name: ci

on:
  push:
    branches: [main, release/**]
  pull_request:
    branches: [main, release/**]

permissions:
  contents: read
  pull-requests: write
  actions: read

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Run Clippy
        run: cargo clippy --locked --all-targets --all-features

      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        run: cargo +nightly fmt --verbose --all --check

      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # v20.0.0

      - name: Build
        run: cargo build --locked --verbose --benches --workspace

      - name: Run tests
        run: cargo test --locked --verbose --workspace

      - name: Run executable
        run: cargo run --locked

  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install latest toolchain
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Generate code coverage
        run: |
          contrib/bin/setup.sh coverage
          build/ci/coverage.sh

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-nix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Nix
        uses: cachix/install-nix-action@7ab6e7fd29da88e74b1e314a4ae9ac6b5cda3801 # v31.8.0

      - name: Cache Nix store
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: termframe
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Run nix flake check
        run: nix flake check --print-build-logs --all-systems --no-update-lock-file

      - name: Run nix build
        run: nix build --print-build-logs --no-update-lock-file
